name: Lint Verification (post-autofix)

on:
  push:
    branches-ignore: [ phase-2-dev ]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
      - '.github/ISSUE_TEMPLATE/**'
  workflow_run:
    workflows: ["CI", "Docker"]
    types: [completed]

permissions:
  contents: read
  pull-requests: read

jobs:
  lint-check:
    # Two activation paths:
    # 1. Direct push containing an autofix commit message.
    # 2. A successful workflow_run on a branch whose latest commit is an autofix commit.
    runs-on: ubuntu-latest
    steps:
      - name: Determine ref / find PR
        id: detect
        uses: actions/github-script@v7
        with:
          script: |
            const isWR = context.eventName === 'workflow_run';
            let sha = '';
            let branch = '';
            if (isWR) {
              sha = context.payload.workflow_run.head_sha;
              branch = context.payload.workflow_run.head_branch;
            } else if (context.payload.after) {
              sha = context.payload.after;
              // branch not directly available for push to fork PR; best effort
              branch = (context.ref || '').replace('refs/heads/','');
            }
            core.setOutput('sha', sha);
            core.setOutput('branch', branch);
      - name: Checkout
        uses: actions/checkout@v4
        with:
            ref: ${{ steps.detect.outputs.sha || github.sha }}
            fetch-depth: 2
      - name: Inspect latest commit message
        id: commit
        run: |
          msg=$(git log -1 --pretty=%B | tr -d '\r')
          echo "message<<END" >> $GITHUB_OUTPUT
          echo "$msg" >> $GITHUB_OUTPUT
          echo "END" >> $GITHUB_OUTPUT
          if echo "$msg" | grep -qiE '^ci: autofix'; then
            echo "autofix=true" >> $GITHUB_OUTPUT
          else
            echo "autofix=false" >> $GITHUB_OUTPUT
          fi
      - name: Skip (not an autofix commit)
        if: steps.commit.outputs.autofix != 'true'
        run: echo "Latest commit not an autofix; skipping lint verification." && exit 0
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install lint deps
        run: |
          pip install --quiet --upgrade pip
          pip install black flake8
      - name: Run black --check
        run: black --check .
      - name: Run flake8
        run: flake8 . --select=E9,F63,F7,F82 --show-source --statistics
      - name: Summary
        if: always()
        run: |
          echo "### Lint Verification Summary" >> $GITHUB_STEP_SUMMARY
          echo "Autofix commit: ${{ steps.commit.outputs.autofix }}" >> $GITHUB_STEP_SUMMARY
          echo "Commit message first line: $(echo "${{ steps.commit.outputs.message }}" | head -n1)" >> $GITHUB_STEP_SUMMARY
