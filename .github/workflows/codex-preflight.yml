name: codex preflight
on:
  workflow_dispatch:
    inputs:
      codex_user:
        description: "Login for the codex connector"
        required: false
      command_phrase:
        description: "Phrase the connector listens for"
        required: false
permissions:
  contents: read
  issues: write

jobs:
  probe:
    runs-on: ubuntu-latest
    env:
      CODEX_USER: ${{ inputs.codex_user || vars.CODEX_USER }}
      CODEX_COMMAND: ${{ inputs.command_phrase || vars.CODEX_COMMAND }}
    steps:
      - name: Is codex assignee allowed?
        if: env.CODEX_USER
        id: assign
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const USER = process.env.CODEX_USER;
            const { data: issue } = await github.rest.issues.create({
              owner, repo, title: `[probe] codex-assignability ${new Date().toISOString()}`, body: "temporary"
            });
            try {
              const res = await github.rest.issues.addAssignees({ owner, repo, issue_number: issue.number, assignees: [USER] });
              core.info("addAssignees status: " + res.status);
              core.setOutput('ok', 'true');
              core.setOutput('num', String(issue.number));
            } catch (err) {
              core.warning(`addAssignees failed: ${err.status} ${err.message}`);
              core.setOutput('ok', 'false');
              core.setOutput('num', String(issue.number));
            }

      - name: Post command Codex listens for (optional)
        if: steps.assign.outputs.num && env.CODEX_COMMAND
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const issue_number = Number("${{ steps.assign.outputs.num }}");
            const COMMAND = process.env.CODEX_COMMAND;
            await github.rest.issues.createComment({
              owner, repo, issue_number,
              body: `${COMMAND}\n\nPlease create a working branch, implement, run tests, and open a draft PR linking back to this issue.`
            });

      - name: Close temp
        if: steps.assign.outputs.num
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            await github.rest.issues.update({
              owner, repo, issue_number: Number("${{ steps.assign.outputs.num }}"), state: 'closed'
            });

      - name: Verdict
        run: |
          if [ -z "${{ env.CODEX_USER }}" ]; then
            echo "::warning::No codex connector login provided. Set CODEX_USER via inputs or repository variable."
            exit 0
          fi
          if [ "${{ steps.assign.outputs.ok }}" != "true" ]; then
            echo "::warning::Codex account was NOT assignable here. Install/authorize the ChatGPT GitHub connector app for this repo or use the exact command it expects."
            exit 0
          fi
          echo "Codex account is assignable; if it still does nothing, add the correct command phrase."
