name: CI
on:
  pull_request:
  push:
    branches: [phase-2-dev]
  workflow_dispatch:

jobs:
  autofix:
    name: autofix
    if: github.event_name == 'pull_request' &&
        github.actor != 'github-actions' &&
        github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    outputs:
      fix_pushed: ${{ steps.autofix_step.outputs.fix_pushed }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Run autofix
        id: autofix_step
        run: |
          python -m pip install -U pip
          pip install -e ".[dev]" black ruff isort
          ruff check --fix .
          black .
          isort .
          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add -A
            if ! git commit -m "ci: autofix formatting/lint"; then
              echo "git commit failed. No changes to commit or another error occurred."
              exit 1
            fi
            if ! git push origin HEAD:${{ github.event.pull_request.head.ref }}; then
              echo "git push failed."
              exit 1
            fi
            echo "fix_pushed=true" >> $GITHUB_OUTPUT
          else
            echo "fix_pushed=false" >> $GITHUB_OUTPUT
          fi

jobs:
  core-tests:
    name: core-tests (Python ${{ matrix.py }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - name: Install test deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install -e ".[dev]" pytest pytest-cov
      - name: Run core subset
        run: |
          pytest -m "not quarantine and not slow" \
            --cov=src --cov-report=term-missing --cov-fail-under=80

  quarantine-tests:
    name: quarantine-tests (Python ${{ matrix.py }})
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        py: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - name: Install test deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install -e ".[dev]" pytest pytest-rerunfailures pytest-timeout pyyaml
      - name: Run quarantined/slow with retries
        run: |
          pytest -m "quarantine or slow" --reruns 2 --reruns-delay 1 --timeout=180

  docker-smoke:
    name: docker-smoke
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: docker build -t trend:ci .
      - name: Run container
        run: |
          docker run -d --name trendci -p 8501:8501 \
            -e STREAMLIT_SERVER_HEADLESS=1 \
            trend:ci
      - name: Wait for health
        run: |
          for i in {1..10}; do
            if curl -fsS http://localhost:8501/health | grep -qi "ok"; then
              echo "App healthy"; exit 0
            fi
            sleep 1
          done
          echo "Health check failed"; docker logs trendci; exit 1

  gate:
    name: gate / all-required-green
    runs-on: ubuntu-latest
    needs: [core-tests, docker-smoke]
    steps:
      - run: echo "Core tests and docker smoke passed."
