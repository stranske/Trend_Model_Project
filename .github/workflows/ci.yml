name: CI
on:
  pull_request:
  push:
    branches: [phase-2-dev]
  workflow_dispatch:

jobs:
  autofix:
    name: autofix
    if: github.event_name == 'pull_request' &&
        github.actor != 'github-actions' &&
        github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    outputs:
      fix_pushed: ${{ steps.autofix_step.outputs.fix_pushed }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Run autofix
        id: autofix_step
        run: |
          python -m pip install -U pip
          pip install -e ".[dev]" black ruff isort
          ruff check --fix .
          black .
          isort .
          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add -A
            if ! git commit -m "ci: autofix formatting/lint"; then
              echo "git commit failed. No changes to commit or another error occurred."
              exit 1
            fi
            if ! git push; then
              echo "git push failed."
              exit 1
            fi
            echo "fix_pushed=true" >> $GITHUB_OUTPUT
          else
            echo "fix_pushed=false" >> $GITHUB_OUTPUT
          fi

  core-tests:
    name: core-tests (Python ${{ matrix.py }})
    needs: [autofix]
    if: env.FIX_PUSHED != 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      # Example: Access the autofix output if needed
      # - name: Check if fixes were pushed
      #   run: echo "Fixes were pushed: ${{ needs.autofix.outputs.fix_pushed }}"
      - run: |
          python -m pip install -U pip
          pip install -e ".[dev]" pytest pytest-cov
      - name: Run core subset
        run: |
          pytest -m "not quarantine and not slow" --cov=src --cov-report=term-missing --cov-fail-under=80

  quarantine-tests:
    name: quarantine-tests (Python ${{ matrix.py }})
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        py: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}
      - run: |
          python -m pip install -U pip
          pip install -e ".[dev]" pytest pytest-rerunfailures pytest-timeout pyyaml
      - name: Run quarantined/slow with retries
        run: |
          pytest -m "quarantine or slow" --reruns 2 --reruns-delay 1 --timeout=180
