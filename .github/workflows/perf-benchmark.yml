name: perf-benchmark

on:
  push:
    branches: [ phase-2-dev ]
  schedule:
    - cron: '17 3 * * *'
  workflow_dispatch:

jobs:
  benchmark:
    if: github.repository_owner == 'stranske'
    runs-on: ubuntu-latest
    env:
      PERF_REGRESSION_PCT: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install minimal deps
        run: |
          python -m pip install --upgrade pip
          pip install numpy pandas scipy matplotlib ipywidgets
      - name: Install project (editable, skip heavy extras if any)
        run: |
          pip install -e .
      - name: Run benchmark
        run: |
          PYTHONPATH=./src python scripts/benchmark_performance.py \
            --rows 1200 --cols 35 --runs 4 --output perf_current.json
      - name: Compare against baseline
        run: |
          python scripts/compare_perf.py --current perf_current.json \
            --baseline perf/perf_baseline.json \
            --threshold-pct $PERF_REGRESSION_PCT
      - name: Summarize key metrics
        if: always()
        run: |
          python -c "import json;cur=json.load(open('perf_current.json'));print('no_cache_mean_s',cur['no_cache_mean_s']);print('cache_mean_s',cur['cache_mean_s']);print('turnover_vectorization.python_mean_s',cur['turnover_vectorization']['python_mean_s']);print('turnover_vectorization.vectorized_mean_s',cur['turnover_vectorization']['vectorized_mean_s']);[print(f'turnover_cap_vectorization.{k}.python_mean_s',v['python_mean_s']) or print(f'turnover_cap_vectorization.{k}.vectorized_mean_s',v['vectorized_mean_s']) for k,v in cur['turnover_cap_vectorization'].items()]"
      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: perf-current
          path: perf_current.json
          retention-days: 7
