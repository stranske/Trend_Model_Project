name: copilot readiness
on: { workflow_dispatch: {} }
permissions:
  contents: read
  issues: write

jobs:
  probe:
    runs-on: ubuntu-latest
    steps:
      - name: Can Copilot be assigned here?
        id: gql
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const query = `
              query($owner:String!, $repo:String!) {
                repository(owner:$owner, name:$repo) {
                  suggestedActors(capabilities:[CAN_BE_ASSIGNED], first:100) {
                    nodes { login }
                  }
                }
              }`;
            const res = await github.graphql(query, {owner, repo});
            const actors = res.repository.suggestedActors.nodes.map(n => (n.login || '').toLowerCase());
            core.info("Assignable actors: " + JSON.stringify(actors));
            core.setOutput('has_copilot', String(actors.some(a => a.includes('copilot'))));

      - name: Create temp issue
        id: tmp
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const { data: issue } = await github.rest.issues.create({
              owner, repo,
              title: "[probe] copilot-assignability",
              body: "This is a temporary probe issue. Safe to close."
            });
            core.setOutput('num', String(issue.number));

      - name: Try assigning @copilot
        id: assign
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const issue_number = Number("${{ steps.tmp.outputs.num }}");
            try {
              const res = await github.rest.issues.addAssignees({ owner, repo, issue_number, assignees: ['copilot'] });
              core.info("addAssignees status: " + res.status);
              core.setOutput('status', String(res.status));
              core.setOutput('ok', 'true');
            } catch (err) {
              core.warning(`addAssignees failed: ${err.status} ${err.message}`);
              core.setOutput('status', String(err.status || 'NA'));
              core.setOutput('ok', 'false');
            }

      - name: Close temp issue
        if: steps.tmp.outputs.num
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            await github.rest.issues.update({
              owner, repo, issue_number: Number("${{ steps.tmp.outputs.num }}"), state: 'closed'
            });

      - name: Verdict
        run: |
          echo "GraphQL says has_copilot = ${{ steps.gql.outputs.has_copilot }}"
          echo "Assignment call ok       = ${{ steps.assign.outputs.ok }} (status=${{ steps.assign.outputs.status }})"
          if [ "${{ steps.gql.outputs.has_copilot }}" != "true" ]; then
            echo "::error::Copilot is NOT assignable in this repo. Enable Copilot coding agent for this repo/org."
            exit 1
          fi
          if [ "${{ steps.assign.outputs.ok }}" != "true" ]; then
            echo "::error::GitHub refused to assign @copilot here (status=${{ steps.assign.outputs.status }}). That confirms policy/enablement is blocking it."
            exit 1
          fi
          echo "Copilot appears assignable here."
