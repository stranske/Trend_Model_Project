name: Autofix (Consumer)

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled]
    branches: [phase-2-dev, main]

permissions:
  contents: write
  pull-requests: write

jobs:
  call-reusable:
    uses: ./.github/workflows/reuse-autofix.yml
    with:
      opt_in_label: ${{ vars.AUTOFIX_OPT_IN_LABEL || 'autofix' }}
      commit_prefix: 'ci: autofix'
  label-applied:
    needs: call-reusable
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Check latest commit message for autofix
        id: msg
        run: |
          git fetch --depth=2 origin ${{ github.event.pull_request.head.ref }}
          git checkout FETCH_HEAD
          msg=$(git log -1 --pretty=%B | tr -d '\r')
          echo "message<<END" >> $GITHUB_OUTPUT
          echo "$msg" >> $GITHUB_OUTPUT
          echo "END" >> $GITHUB_OUTPUT
          if echo "$msg" | grep -qi 'ci: autofix'; then echo "applied=true" >> $GITHUB_OUTPUT; else echo "applied=false" >> $GITHUB_OUTPUT; fi
      - name: Add label
        if: steps.msg.outputs.applied == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const label = process.env.APPLIED_LABEL || 'autofix:applied';
            const pr = context.payload.pull_request.number;
            try {
              await github.rest.issues.addLabels({ owner: context.repo.owner, repo: context.repo.repo, issue_number: pr, labels: [label] });
            } catch (e) { core.warning('Could not add label: ' + e.message); }
        env:
          APPLIED_LABEL: ${{ vars.AUTOFIX_APPLIED_LABEL || 'autofix:applied' }}
