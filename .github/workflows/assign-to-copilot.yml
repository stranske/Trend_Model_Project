name: Assign to Copilot

on:
  issues:
    types: [opened, labeled]
  pull_request_target:
    types: [opened, labeled]

permissions:
  issues: write
  pull-requests: write

jobs:
  assign:
    if: |
      (
        github.event_name == 'issues' &&
        (
          (github.event.action == 'opened' && contains(github.event.issue.labels.*.name, 'agent:copilot')) ||
          (github.event.action == 'labeled' && github.event.label.name == 'agent:copilot')
        )
      ) ||
      (
        github.event_name == 'pull_request_target' &&
        (
          (github.event.action == 'opened' && contains(github.event.pull_request.labels.*.name, 'agent:copilot')) ||
          (github.event.action == 'labeled' && github.event.label.name == 'agent:copilot')
        )
      )
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            function hasAgentLabel(labels) {
              const names = (labels || []).map(l => (l.name || '').toLowerCase());
              return names.includes('agent:copilot');
            }

            if (context.eventName === 'issues') {
              const issue = context.payload.issue;
              const isTriggered =
                (context.payload.action === 'opened' && hasAgentLabel(issue.labels)) ||
                (context.payload.action === 'labeled' && (context.payload.label?.name || '').toLowerCase() === 'agent:copilot');

              if (!isTriggered) return;

              const assignees = (issue.assignees || []).map(a => a.login);
              if (!assignees.includes('copilot')) {
                await github.rest.issues.addAssignees({ owner, repo, issue_number: issue.number, assignees: ['copilot'] });
                await github.rest.issues.createComment({ owner, repo, issue_number: issue.number, body: 'Assigning to @copilot. Please pick up this issue.' });
              }
            } else {
              // pull_request_target
              const pr = context.payload.pull_request;
              const isTriggered =
                (context.payload.action === 'opened' && hasAgentLabel(pr.labels)) ||
                (context.payload.action === 'labeled' && (context.payload.label?.name || '').toLowerCase() === 'agent:copilot');

              if (!isTriggered) return;

              // Use the issues API for PR assignees
              const num = pr.number;
              const { data: full } = await github.rest.issues.get({ owner, repo, issue_number: num });
              const assignees = (full.assignees || []).map(a => a.login);
              if (!assignees.includes('copilot')) {
                await github.rest.issues.addAssignees({ owner, repo, issue_number: num, assignees: ['copilot'] });
                await github.rest.issues.createComment({ owner, repo, issue_number: num, body: 'Assigning to @copilot for PR handling.' });
              }
            }
