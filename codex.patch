 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/Vol_Adj_Trend_Analysis1.3.TrEx.ipynb b/Vol_Adj_Trend_Analysis1.3.TrEx.ipynb
index 9a3b97e048c9b9ad90c4a1408b6563a719d89d2d..d4c8d6104af9aba0f599ef0f4fdaf075395b6c6b 100644
--- a/Vol_Adj_Trend_Analysis1.3.TrEx.ipynb
+++ b/Vol_Adj_Trend_Analysis1.3.TrEx.ipynb
@@ -127,64 +127,62 @@
     "):\n",
     "    \"\"\"\n",
     "    Registers a single 'summary' sheet formatter that writes:\n",
     "      1. Portfolio rows (Equal & User weight),\n",
     "      2. Blank spacer,\n",
     "      3. Fund rows,\n",
     "      4. Blank spacer,\n",
     "      5. Index rows\n",
     "    using the data in `res`.\n",
     "    \"\"\"\n",
     "    @register_formatter_excel(\"summary\")\n",
     "    def fmt_summary(ws, wb):\n",
     "        # Predefine formats\n",
     "        bold = wb.add_format({\"bold\": True})\n",
     "        headers = [\n",
     "            \"Name\", \"Weight %\", \"EW %\",\n",
     "            \"R (IN)%\", \"V (IN)%\", \"Sharpe (IN)\", \"Sortino (IN)\", \"MDD (IN)%\",\n",
     "            \"R (OUT)%\", \"V (OUT)%\", \"Sharpe (OUT)\", \"Sortino (OUT)\", \"MDD (OUT)%\"\n",
     "        ]\n",
     "        bold_title  = wb.add_format({\"bold\": True, \"font_size\": 14})\n",
     "        bold_header = wb.add_format({\"bold\": True})\n",
     "        title = \"Vol-Adj Trend Analysis\"\n",
     "        ws.merge_range(0, 0, 0, len(headers)-1, \"Vol-Adj Trend Analysis\", bold_title)\n",
     "        ws.write_row(4, 0, headers, bold_header)\n",
     "        \n",
-    "        ws.write_row(4, 0, headers, bold)   # row-0, col-0\n",
-    "        row = 3                             # leave one blank line under headers\n",
     "        # ---------------------------------\n",
     "        int0 = wb.add_format({\"num_format\": \"0\"})\n",
     "        num2 = wb.add_format({\"num_format\": \"0.00\"})\n",
     "        red  = wb.add_format({\"num_format\": \"0.00\", \"font_color\": \"red\"})\n",
     "        pct  = lambda t: [t[0]*100, t[1]*100, t[2], t[3], t[4]*100]\n",
     "\n",
     "        # Write static headers\n",
     "        ws.write_row(0, 0, [\"Vol-Adj Trend Analysis\"], bold)\n",
     "        ws.write_row(1, 0, [f\"In:  {in_start} → {in_end}\"], bold)\n",
     "        ws.write_row(2, 0, [f\"Out: {out_start} → {out_end}\"], bold)\n",
     "\n",
-    "        row = 5\n",
+    "        row = 5                             # start after headers\n",
     "        # 1. Portfolio rows\n",
     "        for label, in_s, out_s in [\n",
     "            (\"Equal Weight\", res[\"in_ew_stats\"], res[\"out_ew_stats\"]),\n",
     "            (\"User Weight\",  res[\"in_user_stats\"], res[\"out_user_stats\"])\n",
     "        ]:\n",
     "            ws.write(row, 0, label, bold)\n",
     "            ws.write(row, 1, safe(\"\") if True else int0)\n",
     "            vals = pct(tuple(in_s)) + pct(tuple(out_s))\n",
     "            fmts = ([num2]*4 + [red]) * 2\n",
     "            for col, (v, fmt) in enumerate(zip(vals, fmts), start=2):\n",
     "                ws.write(row, col, safe(v), fmt)\n",
     "            row += 1\n",
     "\n",
     "        # spacer\n",
     "        row += 1\n",
     "\n",
     "        # 2. Fund rows\n",
     "        for fund, stat_in in res[\"in_sample_stats\"].items():\n",
     "            stat_out = res[\"out_sample_stats\"][fund]\n",
     "            ws.write(row, 0, fund, bold)\n",
     "            wt = res[\"fund_weights\"][fund]\n",
     "            ws.write(row, 1, safe(wt*100), int0)\n",
     "            vals = pct(tuple(stat_in)) + pct(tuple(stat_out))\n",
     "            fmts = ([num2]*4 + [red]) * 2\n",
     "            for col, (v, fmt) in enumerate(zip(vals, fmts), start=2):\n",
 
EOF
)