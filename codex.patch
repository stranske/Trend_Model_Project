 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/Vol_Adj_Trend_Analysis1.3.TrEx.ipynb b/Vol_Adj_Trend_Analysis1.3.TrEx.ipynb
index e131eb70486477d4aa38bc111ae8a09c7a7aa494..26626fc8ae4a4b85d2df69c669c4ec1a116244c0 100644
--- a/Vol_Adj_Trend_Analysis1.3.TrEx.ipynb
+++ b/Vol_Adj_Trend_Analysis1.3.TrEx.ipynb
@@ -647,51 +647,50 @@
     "    in_sc.clip(lower=-1, inplace=True)\n",
     "    out_sc.clip(lower=-1, inplace=True)\n",
     "\n",
     "    # ---- stats ------------------------------------------------------\n",
     "    rf_value = in_rf.mean() if hasattr(in_rf, \"mean\") else float(in_rf)\n",
     "\n",
     "    # Create a RiskStatsConfig for in-sample stats\n",
     "    stats_cfg = RiskStatsConfig(risk_free=rf_value)\n",
     "\n",
     "    # Now compute stats for each scenario, always passing stats_cfg first\n",
     "    in_stat = {\n",
     "        f: _stats(in_sc[f], stats_cfg)\n",
     "        for f in selected\n",
     "    }\n",
     "    out_rf_value = out_rf.mean() if hasattr(out_rf, \"mean\") else float(out_rf)\n",
     "\n",
     "    # Re‐use the same config, updating only the risk_free field\n",
     "    stats_cfg.risk_free = out_rf_value\n",
     "\n",
     "    out_stat = {\n",
     "        f: _stats(out_sc[f], stats_cfg)\n",
     "        for f in selected\n",
     "    }\n",
     "\n",
     "    ew_vec = np.full(len(selected), 1/len(selected))\n",
-    "    w_vec = np.full(len(selected), 1/len(selected))\n",
     "\n",
     "    in_ew_stats  = _stats(in_sc.dot(ew_vec),  stats_cfg)\n",
     "    out_ew_stats = _stats(out_sc.dot(ew_vec), stats_cfg)\n",
     "    in_user_stats  = _stats(in_sc.dot(w_vec),  stats_cfg)\n",
     "    out_user_stats = _stats(out_sc.dot(w_vec), stats_cfg)\n",
     "\n",
     "    results = {\n",
     "        \"selected_funds\": selected,\n",
     "        \"indices_list\":   indices_list or [],\n",
     "        \"fund_weights\":   w_dict,\n",
     "        \"ew_weights\":     {f: 1/len(selected) for f in selected},\n",
     "        \"in_sample_stats\":  in_stat,\n",
     "        \"out_sample_stats\": out_stat,\n",
     "        \"in_ew_stats\":     in_ew_stats,\n",
     "        \"out_ew_stats\":    out_ew_stats,\n",
     "        \"in_user_stats\":   in_user_stats,\n",
     "        \"out_user_stats\":  out_user_stats,\n",
     "        \"dropped\":         dropped,\n",
     "    }\n",
     "\n",
     "    # ---- optional index stats ---------------------------------------\n",
     "    if indices_list:\n",
     "        idx_stats = {}\n",
     "        for col in indices_list:\n",
     "            idx_stats[col] = {\n",
 
EOF
)